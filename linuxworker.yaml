AWSTemplateFormatVersion: 2010-09-09
Parameters:
  SubnetID:
    Type: String
  VPCID:
    Type: String
  S3URL:
      Type: String
  Domain:
      Type: String
  InstanceTypeParameter:
    Type: String
    Default: t2.small
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c1.medium
      - c1.xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - g2.2xlarge
      - g2.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - hi1.4xlarge
      - hs1.8xlarge
      - cr1.8xlarge
      - cc2.8xlarge
      - cg1.4xlarge
    Description: Enter instance size. Default is t2.small.
Resources:
  KopsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonEC2FullAccess"
        - "arn:aws:iam::aws:policy/AmazonRoute53FullAccess"
        - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
        - "arn:aws:iam::aws:policy/IAMFullAccess"
        - "arn:aws:iam::aws:policy/AmazonVPCFullAccess"
  KopsInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Roles:
        - !Ref KopsRole
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      VpcId: !Ref VPCID
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: '0.0.0.0/0'
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: '0.0.0.0/0'
      - IpProtocol: tcp
        FromPort: '443'
        ToPort: '443'
        CidrIp: '0.0.0.0/0'
  Worker:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: ami-97785bed
      SubnetId: !Ref SubnetID
      InstanceType:
        Ref: InstanceTypeParameter
      SecurityGroupIds:
        - Ref: InstanceSecurityGroup
      IamInstanceProfile:
        Ref: KopsInstanceProfile
      KeyName: DukeLegion
      Tags:
        -
          Key: Appplication
          Value: Worker
        -
          Key: Domain
          Value: None
        -
          Key: Environment
          Value: Test
        -
          Key: LifeTime
          Value: Transient
        -
          Key: Name
          Value: Worker
        -
          Key: OS
          Value: Linux
        -
          Key: OwnerContact
          Value: "#{Contact}"
        -
          Key: Purpose
          Value: Support Test Instance
        -
          Key: Source
          Value: CloudForation Script in Octopus Deploy
        -
          Key: scheduler:ec2-startstop
          Value: true
      UserData:
        Fn::Base64: !Join
          - ''
          -
            - |-
              #!/bin/bash
              sudo yum install -y libunwind libicu jq docker
              sudo service docker start
              sudo usermod -a -G docker ec2-user
              sudo wget https://github.com/kubernetes/kops/releases/download/1.9.0-alpha.1/kops-linux-amd64 -O /opt/kops
              sudo chmod +x /opt/kops
              cd /opt
              sudo curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
              sudo chmod +x kubectl
              # Add /opt to the path
              echo "PATH=$PATH:/opt" | sudo tee --append /etc/environment
              # Update /etc/environment with the location in S3 where kops will save its state
              sudo echo "KOPS_STATE_STORE=
            - !Ref S3URL
            - |-
              " | sudo tee --append /etc/environment
              # Create a SSH keypair
              if [ ! -f /home/ec2-user/id_rsa ]; then
                ssh-keygen -t rsa -N "" -f /home/ec2-user/.ssh/id_rsa
                sudo chown ec2-user:ec2-user /home/ec2-user/.ssh/id_rsa
              fi
  WebElasticIp:
      Type: AWS::EC2::EIP
      Properties:
        Domain: vpc
        InstanceId: !Ref Worker
Outputs:
  PublicIp:
    Value:
      Fn::GetAtt:
      - Worker
      - PublicIp
    Description: Server's PublicIp Address